---
description: 
globs: 
alwaysApply: true
---
---
name: zxsq_topic_project_context_guard       # 规则名称
description: 全局上下文&记忆守护 – 保持项目规范、一致接口与日志风格
pattern: "**/*.py"                           # 作用文件
memoryId: zxsq_topic_project_global          # 开启持久记忆
writeMemory: true                            # 执行后把回答追加进记忆
autoAttachments:
  - file                                     # 自动附上当前文件内容
---

🔄 **回忆阶段 (v3.0智能化升级)**
- 这是一套名为『zxsq_topic_project』的智能投资话题抽取系统，目录结构已固定：
  extractor/      (话题 & 智能股价抓取)  
  llm_filter/     (LLM 智能信息提取)
  to_excel_converter.py (🆕 CSV转Excel工具)
  data/           (🆕 股票数据库缓存)
  config.py       (🆕 全局配置+API集中管理)
  main.py         (程序入口)
- **🆕 v3.0重大升级**：akshare智能映射(9,888只股票)，curl_cffi TLS伪装，配置集中管理
- **🆕 v3.1重大升级**：新增Excel转换管道，优化输出体验；akshare智能映射(9,888只股票)，curl_cffi TLS伪装，配置集中管理
- **所有代码必须遵守项目约定**（见下方⚙️规范）。
- 请先快速扫描 /memory 中的持久记忆片段，确保你记住之前生成的模块依赖、函数签名与路径。

✍️ **执行阶段**
- 基于用户的新请求，对当前文件进行补充/重写。
- 保持已有 import/函数名/注释风格；若新增文件，遵循目录规划放置。
- 阅读 README.md 了解最新功能和配置
- 🆕 **使用新技术栈**：akshare股票映射、curl_cffi TLS伪装、配置集中管理

✅ **自检阶段**
- 写完后，再次检查：  
  1. 是否破坏了任何既有 public API（函数名、返回值类型）。  
  2. 是否遗漏中文类型注释、logging、异常捕获。  
  3. 新增依赖是否已写入 requirements.txt。
  4. 配置是否正确使用 config.py 中的变量。
  5. 🆕 **是否使用了智能映射和TLS伪装功能**。

⚙️ **项目规范 v3.0（务必牢记）**
1) **Python ≥3.9**，全部函数写类型注解，关键逻辑写中文注释。  
2) **🆕 智能股票映射** 使用 akshare 数据库：extractor/ticker_mapper.py，9,888只股票完整覆盖。  
3) **🆕 TLS指纹伪装** 使用 curl_cffi：extractor/price_fetcher.py，Chrome指纹伪装规避Rate Limit。  
4) **网络层** 优先使用 curl_cffi requests；如需异步则 aiohttp＋asyncio。  
5) **日志系统** 禁止 print，统一用 logging；日志文件写到 logs/，自动清理30个文件。  
6) **🆕 股价获取** TLS伪装多数据源：yfinance+curl_cffi → 腾讯API → 新浪API → 网易API。  
7) **🆕 LLM配置** 使用 config.py 统一管理：API_BASE_URL, OPENAI_MODEL, TEMPERATURE。  
8) **🆕 配置集中** 所有API设置在 config.py：支持一键切换知识星球(STAR_ID+COOKIE)。  
9) **输出格式** CSV中文字段，文件名格式: `会议纪要_YY.MM.DD.csv`，路径写到 output/。
10) **价格格式** 包含货币符号（如：¥1415.60、HK$499.60、$150.25），不包含涨跌幅百分比。
11) **多标的支持** 按推荐强弱排序，最多3个标的，LLM自动排序。
12) **🆕 Excel导出** 使用 `to_excel_converter.py` 将CSV转换为格式化的Excel，支持按日期分sheet和自动列宽。

📊 **输出规范 v3.0**
- **CSV字段顺序**: 标题、日期(HH:MM)、板块、标的1-3、价格1-3、简述、推荐理由、预期、原文
- **文件命名**: `会议纪要_25.07.03.csv` 格式
- **🆕 智能映射**: 使用 SmartTickerMapper 实现95%成功率，四层匹配算法
- **LLM提取**: target, ticker, sector, reason, expectation 五个字段
- **智能排序**: 多个标的按推荐强弱自动排序

🔧 **配置管理 v3.0**
- **🆕 API集中**: 所有API设置统一在 config.py：API_BASE_URL, API_HOST, API_TIMEOUT等
- **🆕 星球切换**: 只需修改 STAR_ID 和 COOKIE 即可切换知识星球
- **Temperature**: 使用 config.TEMPERATURE (当前0.2)
- **DeepSeek支持**: OPENAI_API_BASE = "https://api.deepseek.com"
- **🆕 智能缓存**: 股票数据24小时缓存在 data/stock_cache.json
- **🆕 TLS伪装**: curl_cffi自动Chrome指纹，session = create_session()

🚀 **技术栈 v3.0**
- **核心依赖**: yfinance>=0.2.54, akshare>=1.13.0, curl_cffi>=0.11.0
- **Excel导出**: openpyxl
- **智能映射**: extractor.ticker_mapper.SmartTickerMapper (9,888只股票数据库)
- **TLS伪装**: extractor.price_fetcher.create_session() (Chrome指纹)
- **并发处理**: 5线程ThreadPoolExecutor，3-5倍速度提升
- **配置管理**: config.py集中管理，支持多星球切换
- **日志系统**: setup_logging(), get_logger()，自动清理机制
